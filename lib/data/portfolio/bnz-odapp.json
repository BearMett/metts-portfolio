{
  "id": "bnz-odapp",
  "date": "2025-01",
  "companyId": "bnz",
  "title": {
    "ko": "오답노트 관리 시스템 개발",
    "en": "Wrong Answer Note Management System Development"
  },
  "shortDesc": {
    "ko": "학생들의 오답을 체계적으로 관리하고 복습할 수 있는 웹 애플리케이션 개발",
    "en": "Developed a web app to help students systematically manage and review their incorrect answers"
  },
  "description": {
    "ko": "학원에서 시험 후 틀린 문제를 조교가 수기로 관리하면서 학생별 진행 상황을 파악하기 어렵고, 오답노트를 하지 않는 학생을 조기에 발견하기 어려운 문제가 있었습니다. 이를 해결하기 위해 학생들이 마치 일감 관리하듯 오답 문제를 체계적으로 정리하고, 교사가 SSE를 통해 실시간으로 학생들의 문제 풀이 상황을 확인하며 피드백을 주고받을 수 있는 시스템을 개발했습니다.",
    "en": "At the academy, teaching assistants manually tracked wrong answers after exams, making it difficult to identify individual student progress or detect students who weren't doing their corrections early. To solve this, I developed a system where students organize their incorrect answers like task management, and teachers use SSE (Server-Sent Events) to monitor students' problem-solving progress in real-time and exchange feedback."
  },
  "techStack": [
    "Next.js",
    "TypeScript",
    "PostgreSQL",
    "Prisma",
    "Tailwind CSS",
    "Docker",
    "React Query",
    "Vitest",
    "SSE"
  ],
  "category": [
    "frontend",
    "backend",
    "database"
  ],
  "tasks": {
    "ko": [
      "교사가 실시간으로 학생들의 문제 풀이 상황을 확인하고 피드백을 주고받아야 했으므로, SSE(Server-Sent Events)를 활용한 실시간 통신 기능을 구현하고 이벤트 핸들러를 독립적인 모듈로 추출하여 관심사를 분리했습니다.",
      "프로덕션 데이터에 직접 접근할 수 없고 테스트 환경을 분리해야 했으므로, 저장소 인터페이스를 추상화하여 운영 환경과 테스트 환경을 독립적으로 관리하고 단위 테스트를 용이하게 했습니다.",
      "학생, 교사, 관리자별로 접근 권한과 기능이 달라야 했으므로, 역할별 맞춤형 인터페이스와 권한 관리 시스템을 구현했습니다.",
      "복잡한 데이터 관계(학생-문제-진행상황)를 효율적으로 관리해야 했으므로, Prisma ORM을 활용한 타입 안전한 데이터베이스 설계와 마이그레이션 시스템을 구축했습니다.",
      "코드 품질을 보장하고 리팩토링을 안전하게 수행해야 했으므로, Vitest 기반 자동화 테스트 환경을 구축했습니다."
    ],
    "en": [
      "Teachers needed to monitor students' problem-solving progress and exchange feedback in real-time, so I implemented real-time communication using SSE (Server-Sent Events) and extracted event handlers into independent modules for separation of concerns.",
      "Production data couldn't be accessed directly and test environments needed separation, so I abstracted the repository interface to independently manage production and test environments, facilitating unit testing.",
      "Students, teachers, and admins required different access permissions and features, so I implemented role-specific interfaces and permission management systems.",
      "Complex data relationships (students-problems-progress) needed efficient management, so I built type-safe database design and migration systems using Prisma ORM.",
      "Code quality needed assurance and refactoring had to be safe, so I set up an automated testing environment with Vitest."
    ]
  },
  "achievements": {
    "ko": [
      "수기 관리에서 시스템 관리로 전환하여 조교의 관리 부담을 줄이고, 학생별 진행 상황을 한눈에 파악할 수 있게 되었습니다.",
      "오답노트를 하지 않는 학생을 조기에 발견하고 적시에 피드백을 제공할 수 있게 되어 학습 관리 효율성이 향상되었습니다.",
      "모듈화된 설계로 새로운 기능 추가와 유지보수가 용이한 시스템을 구축했습니다."
    ],
    "en": [
      "Transitioned from manual to system-based management, reducing teaching assistants' workload and enabling at-a-glance tracking of individual student progress.",
      "Enabled early detection of students not doing corrections and timely feedback provision, improving learning management efficiency.",
      "Developed a modular system that makes adding new features and maintenance straightforward."
    ]
  }
}