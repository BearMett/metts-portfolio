{
  "id": "bnz-mdtex-parser",
  "date": "2024-06",
  "companyId": "bnz",
  "title": {
    "ko": "수학 문제 풀이 솔루션의 텍스트/수식 오류 복구 도구",
    "en": "Text and Equation Error Recovery Tool for Math Solutions"
  },
  "shortDesc": {
    "ko": "LLM이 생성한 수학 풀이에서 수식 구분자 오류를 자동으로 수정하는 파서 개발",
    "en": "Developed a parser to auto-correct equation delimiter errors in LLM-generated math solutions"
  },
  "description": {
    "ko": "수학 문제 풀이를 제공하는 LLM 기반 서비스에서 LaTeX 수식 구분자($)가 누락되거나 짝이 맞지 않는 오류가 새로운 패턴이 등장할 때마다 발생했습니다. 수식이 텍스트로 보이거나 레이아웃이 크게 망가지는 문제가 지속되어, 해설 모듈을 검토 없이는 제품으로 내보낼 수 없는 상황이었습니다. LLM 재생성으로 해결하려 했으나 규칙 추가마다 OCR 성능이 떨어지고 비용이 감당하기 어려웠으므로, 오류 패턴을 자동으로 수정하는 파서를 개발했습니다.",
    "en": "In an LLM-based service providing math problem solutions, LaTeX equation delimiter ($) errors occurred whenever new patterns emerged, with delimiters missing or mismatched. Equations displayed as text or layouts severely broke, making it impossible to release the explanation module to production without review. We attempted to solve this with LLM regeneration, but adding rules degraded OCR performance and costs became unmanageable, so I developed a parser to automatically correct error patterns."
  },
  "techStack": [
    "TypeScript",
    "npm"
  ],
  "category": [
    "backend",
    "parser"
  ],
  "tasks": {
    "ko": [
      "새로운 패턴 발견 시 즉시 대응 가능하도록 문서 요소를 인라인 수식, 블록 수식, 마크다운으로 분류하고, 각 요소의 문맥을 분석하여 잠재적 오류 패턴을 자동으로 식별하는 파서를 구현했습니다.",
      "오류 패턴별 변환 로직을 모듈화하여 새로운 패턴 발견 시 기존 코드 수정 없이 규칙만 추가할 수 있도록 설계했습니다.",
      "검토 없이 제품에 적용 가능한 수준의 안정성을 확보하기 위해 개별 변환 모듈의 단위 테스트와 전체 파이프라인의 통합 테스트를 구축했습니다."
    ],
    "en": [
      "Implemented a parser to categorize document elements into inline equations, block equations, and Markdown, analyzing each element's context to automatically identify potential error patterns for immediate response to newly discovered patterns.",
      "Modularized conversion logic by error pattern to enable adding new rules without modifying existing code when new patterns are discovered.",
      "Built unit tests for individual conversion modules and integration tests for the full pipeline to ensure stability sufficient for production deployment without review."
    ]
  },
  "achievements": {
    "ko": [
      "검토 없이 제품에 적용 가능한 수준의 안정성을 확보하여, 새로운 패턴 발견 시마다 긴급 대응하던 상황에서 벗어나 안정적으로 해설 모듈을 서비스에 배포할 수 있게 되었습니다.",
      "모듈화된 설계로 새로운 오류 패턴 발견 시 기존 기능에 영향을 주지 않고 확장이 가능해졌습니다.",
      "수식 표현 오류로 인한 UI 깨짐 현상이 완전히 해결되어 사용자 경험이 개선되었습니다."
    ],
    "en": [
      "Secured stability sufficient for production deployment without review, eliminating the need for emergency responses to each new pattern discovery and enabling stable service deployment of the explanation module.",
      "Enabled easy expansion for new error patterns without impacting existing features thanks to a modular design.",
      "Eliminated UI glitches caused by equation errors, enhancing the user experience."
    ]
  },
  "sourceUrl": "https://github.com/BNZinc/mdtex-parser",
  "images": [
    {
      "src": "/portfolio/correctness-latex.png",
      "alt": {
        "ko": "올바르게 수정된 LaTeX 구문",
        "en": "Correctly fixed LaTeX syntax"
      }
    },
    {
      "src": "/portfolio/borken-latex.png",
      "alt": {
        "ko": "사용자에게 잘못 표시되는 LaTeX 구문",
        "en": "LaTeX syntax displayed incorrectly to users"
      }
    }
  ]
}